<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Software on Forestry Test</title><link>https://dmiracle.github.io/forestio-test/software/</link><description>Recent content in Software on Forestry Test</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Strangeworks</copyright><lastBuildDate>Tue, 09 Mar 2021 17:14:35 -0600</lastBuildDate><atom:link href="https://dmiracle.github.io/forestio-test/software/index.xml" rel="self" type="application/rss+xml"/><item><title>Tket</title><link>https://dmiracle.github.io/forestio-test/software/tket/</link><pubDate>Tue, 09 Mar 2021 17:14:35 -0600</pubDate><guid>https://dmiracle.github.io/forestio-test/software/tket/</guid><description>&lt;p>&lt;strong>Short one-liner pulled from project page&lt;/strong>&lt;/p></description></item><item><title>Amazon braket</title><link>https://dmiracle.github.io/forestio-test/software/braket/</link><pubDate>Mon, 08 Mar 2021 00:00:00 +0000</pubDate><guid>https://dmiracle.github.io/forestio-test/software/braket/</guid><description>&lt;blockquote>
&lt;p>Amazon Braket is a fully managed quantum computing service that helps researchers and developers get started with the technology to accelerate research and discovery. Amazon Braket provides a development environment for you to explore and build quantum algorithms, test them on quantum circuit simulators, and run them on different quantum hardware technologies.&lt;/p>
&lt;/blockquote></description></item><item><title>Blueqat</title><link>https://dmiracle.github.io/forestio-test/software/blueqat/</link><pubDate>Mon, 08 Mar 2021 00:00:00 +0000</pubDate><guid>https://dmiracle.github.io/forestio-test/software/blueqat/</guid><description>&lt;blockquote>
&lt;p>We design and build solutions and systems for quantum computing environments and machine learning, with a focus on the public cloud aws. We also implement quantum computers and machine learning algorithmic solutions on a contract basis, centering on programming languages python / julia based on papers.&lt;/p>
&lt;/blockquote></description></item><item><title>Cirq</title><link>https://dmiracle.github.io/forestio-test/software/cirq/</link><pubDate>Mon, 08 Mar 2021 00:00:00 +0000</pubDate><guid>https://dmiracle.github.io/forestio-test/software/cirq/</guid><description>&lt;blockquote>
&lt;p>An open source framework for programming quantum computers&lt;/p>
&lt;p>Cirq is a Python software library for writing, manipulating, and optimizing quantum circuits, and then running them on quantum computers and quantum simulators. Cirq provides useful abstractions for dealing with today’s noisy intermediate-scale quantum computers, where details of the hardware are vital to achieving state-of-the-art results.n&lt;/p>
&lt;/blockquote></description></item><item><title>D-Wave Ocean</title><link>https://dmiracle.github.io/forestio-test/software/ocean/</link><pubDate>Mon, 08 Mar 2021 00:00:00 +0000</pubDate><guid>https://dmiracle.github.io/forestio-test/software/ocean/</guid><description>&lt;blockquote>
&lt;p>Ocean software is a suite of tools D-Wave Systems provides on the D-Wave GitHub repository for solving hard problems with quantum computers.&lt;/p>
&lt;/blockquote></description></item><item><title>Forest SDK</title><link>https://dmiracle.github.io/forestio-test/software/forest/</link><pubDate>Mon, 08 Mar 2021 00:00:00 +0000</pubDate><guid>https://dmiracle.github.io/forestio-test/software/forest/</guid><description>&lt;p>Forest is an SDK for Rigetti quantum computing that includes&lt;/p>
&lt;ul>
&lt;li>QUIL &amp;ndash;&lt;/li>
&lt;li>PyQuil &amp;ndash; python library&lt;/li>
&lt;li>Quilc &amp;ndash; compiler&lt;/li>
&lt;li>QVM &amp;ndash; Quantum virtual machine, simulator&lt;/li>
&lt;/ul></description></item><item><title>PennyLane</title><link>https://dmiracle.github.io/forestio-test/software/penny-lane/</link><pubDate>Mon, 08 Mar 2021 00:00:00 +0000</pubDate><guid>https://dmiracle.github.io/forestio-test/software/penny-lane/</guid><description>&lt;blockquote>
&lt;p>A cross-platform Python library for differentiable programming of quantum computers. Train a quantum computer the same way as a neural network.&lt;/p>
&lt;/blockquote></description></item><item><title>OpenQASM</title><link>https://dmiracle.github.io/forestio-test/software/qasm/</link><pubDate>Wed, 03 Mar 2021 00:00:00 +0000</pubDate><guid>https://dmiracle.github.io/forestio-test/software/qasm/</guid><description>&lt;p>OpenQASM is a language that allows quantum developers to represent quantum circuits in a programmatic way developed for IBM quantum experience. There is a direct equivalence between a circuit drawing and its QASM representation. The language is specified in the &lt;a href="https://arxiv.org/abs/1707.03429">OpenQASM paper&lt;/a> and is a quick way to get started developing quantum circuits.&lt;/p></description></item><item><title>Project Q</title><link>https://dmiracle.github.io/forestio-test/software/projectq/</link><pubDate>Wed, 03 Mar 2021 00:00:00 +0000</pubDate><guid>https://dmiracle.github.io/forestio-test/software/projectq/</guid><description>&lt;p>Project Q is where you get your Q on&lt;/p>
&lt;blockquote>
&lt;p>ProjectQ is an open-source software framework for quantum computing started at ETH Zurich. It allows users to implement their quantum programs in Python using a powerful and intuitive syntax. ProjectQ can then translate these programs to any type of back-end, be it a simulator run on a classical computer or an actual quantum chip.&lt;/p>
&lt;/blockquote></description></item><item><title>Q#</title><link>https://dmiracle.github.io/forestio-test/software/qsharp/</link><pubDate>Wed, 03 Mar 2021 00:00:00 +0000</pubDate><guid>https://dmiracle.github.io/forestio-test/software/qsharp/</guid><description>&lt;p>This is the Quantum project from Microsoft&lt;/p>
&lt;blockquote>
&lt;p>Q# is Microsoft’s open-source programming language for developing and running quantum algorithms. It’s part of the Quantum Development Kit (QDK), which includes Q# libraries, quantum simulators, extensions for other programming environments, and API documentation. In addition to the Standard Q# library, the QDK includes Chemistry, Machine Learning, and Numeric libraries.&lt;/p>
&lt;p>As a programming language, Q# draws familiar elements from Python, C#, and F# and supports a basic procedural model for writing programs with loops, if/then statements, and common data types. It also introduces new quantum-specific data structures and operations.&lt;/p>
&lt;/blockquote></description></item><item><title>Qiskit</title><link>https://dmiracle.github.io/forestio-test/software/qiskit/</link><pubDate>Wed, 03 Mar 2021 00:00:00 +0000</pubDate><guid>https://dmiracle.github.io/forestio-test/software/qiskit/</guid><description>&lt;p>Fully featured IBM behemoth, tools for q-bending.&lt;/p>
&lt;blockquote>
&lt;p>Qiskit [quiss-kit] is an open source SDK for working with quantum computers at the level of pulses, circuits and application modules.&lt;/p>
&lt;/blockquote></description></item></channel></rss>